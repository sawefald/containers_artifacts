Update cluster with keyvault addon:
az aks addon enable -n cluster-vpn-aks-team-2 -g rg-aks-team-2 --addon azure-keyvault-secrets-provider

Add keyvault:
az keyvault create -n kv-aks-team-2 -g rg-aks-team-2

Add secret:
az keyvault secret set --vault-name kv-aks-team-2 -n SQLPWD --value wL5ds8Fu9

Enable pod identity:
az feature register --name EnablePodIdentityPreview --namespace Microsoft.ContainerService
az extension add --name aks-preview
az extension update --name aks-preview
az aks update -g $rg -n $cluster --enable-pod-identity
az aks update -g $rg -n $cluster --enable-pod-identity --enable-pod-identity-with-kubenet
az group create --name myIdentityResourceGroup --location eastus

$IDENTITY_RESOURCE_GROUP="rg-aks-team-2"
$IDENTITY_NAME="identity-aks-team-2"
az identity create --resource-group $IDENTITY_RESOURCE_GROUP --name $IDENTITY_NAME
$IDENTITY_CLIENT_ID="$(az identity show -g $IDENTITY_RESOURCE_GROUP -n $IDENTITY_NAME --query clientId -otsv)"
$IDENTITY_RESOURCE_ID="$(az identity show -g $IDENTITY_RESOURCE_GROUP -n $IDENTITY_NAME --query id -otsv)

echo $IDENTITY_CLIENT_ID
305b24e8-f67a-4a95-9137-1a317fe4d1d2

echo $IDENTITY_RESOURCE_ID
/subscriptions/bf27eb1e-03ee-4d96-9151-2c2ceda1e992/resourcegroups/rg-aks-team-2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-aks-team-2

$NODE_GROUP=$(az aks show -g rg-aks-team-2 -n cluster-vpn-aks-team-2 --query nodeResourceGroup -o tsv)
$NODES_RESOURCE_ID=$(az group show -n $NODE_GROUP -o tsv --query "id")
az role assignment create --role "Virtual Machine Contributor" --assignee "$IDENTITY_CLIENT_ID" --scope $NODES_RESOURCE_ID

echo $NODE_GROUP
MC_rg-aks-team-2_cluster-vpn-aks-team-2_southcentralus
echo $NODES_RESOURCE_ID
/subscriptions/bf27eb1e-03ee-4d96-9151-2c2ceda1e992/resourceGroups/MC_rg-aks-team-2_cluster-vpn-aks-team-2_southcentralus

$POD_IDENTITY_NAME="my-pod-identity"
$POD_IDENTITY_NAMESPACE="my-app"
az aks pod-identity add --resource-group rg-aks-team-2 --cluster-name cluster-vpn-aks-team-2 --namespace $POD_IDENTITY_NAMESPACE  --name $POD_IDENTITY_NAME --identity-resource-id $IDENTITY_RESOURCE_ID

#
#  Ingress controller
#
REGISTRY_NAME=registryysu9847.azurecr.io
SOURCE_REGISTRY=k8s.gcr.io
CONTROLLER_IMAGE=ingress-nginx/controller
CONTROLLER_TAG=v1.0.4
PATCH_IMAGE=ingress-nginx/kube-webhook-certgen
PATCH_TAG=v1.1.1
DEFAULTBACKEND_IMAGE=defaultbackend-amd64
DEFAULTBACKEND_TAG=1.5

az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$CONTROLLER_IMAGE:$CONTROLLER_TAG --image $CONTROLLER_IMAGE:$CONTROLLER_TAG
az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$PATCH_IMAGE:$PATCH_TAG --image $PATCH_IMAGE:$PATCH_TAG
az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG --image $DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG

helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update

ACR_URL=registryysu9847.azurecr.io
helm install nginx-ingress ingress-nginx/ingress-nginx \
    --version 4.0.13 \
    --namespace ingress-basic --create-namespace \
    --set controller.replicaCount=2 \
    --set controller.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.image.registry=$ACR_URL \
    --set controller.image.image=$CONTROLLER_IMAGE \
    --set controller.image.tag=$CONTROLLER_TAG \
    --set controller.image.digest="" \
    --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz \
    --set controller.admissionWebhooks.patch.image.registry=$ACR_URL \
    --set controller.admissionWebhooks.patch.image.image=$PATCH_IMAGE \
    --set controller.admissionWebhooks.patch.image.tag=$PATCH_TAG \
    --set controller.admissionWebhooks.patch.image.digest="" \
    --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
    --set defaultBackend.image.registry=$ACR_URL \
    --set defaultBackend.image.image=$DEFAULTBACKEND_IMAGE \
    --set defaultBackend.image.tag=$DEFAULTBACKEND_TAG \
    --set defaultBackend.image.digest=""
